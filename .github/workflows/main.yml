name: Build and Deploy

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup JAVA
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Build Project
        run: mvn clean install -DskipTests
      - name: Login to Docker Hub
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Build Docker Image
        run: docker build -t juliandedward/gym-app .
      - name: Publish Docker Image
        run: docker push juliandedward/gym-app:latest
  deploy:
    needs: build
    runs-on: [aws-ec2]
    steps:
      - name: Checkout Postgresql
        run: |
          sudo docker ps | grep postgresql || sudo docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}} --name postgresql postgres:latest
      - name: Check if DB exists
        id: check_db
        run: |
          EXISTS=$(sudo docker exec -i postgresql psql -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname='gymdb'")
          if [ -z "$EXISTS" ]; then
            echo "DB does not exist"
            echo "::set-output name=db_exists::false"
          else
            echo "DB already exists"
            echo "::set-output name=db_exists::true"
          fi

      - name: Run create DB
        if: steps.check_db.outputs.db_exists == 'false'
        run: | 
          sudo docker exec -i postgresql psql -U postgres -c "CREATE DATABASE gymdb;"
      - name: Login to Docker Hub
        run: |
          echo "$DOCKER_PASSWORD" | sudo docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Pull Docker Image
        run:  sudo docker pull juliandedward/gym-app:latest
      - name: Delete old containers
        run: |
          sudo docker stop gym-app-0 || true
          sudo docker rm gym-app-0 || true
          sudo docker rmi gym-app || true
      - name: Docker Run
        run: sudo docker run -d -p 8080:8080 -v /home/ec2-user/dev/app:/app/dev/app --name gym-app-0 juliandedward/gym-app:latest
      - name: Docker prune
        run: sudo docker system prune -f